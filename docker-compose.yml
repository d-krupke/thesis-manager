services:
  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U thesis_user -d thesis_manager"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: sh -c "python manage.py migrate && python manage.py collectstatic --noinput && gunicorn thesis_manager.wsgi:application --bind 0.0.0.0:8000 --reload"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:
  media_volume:
