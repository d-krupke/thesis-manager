# Production Environment Configuration
# =====================================
#
# This file provides example configuration for production deployments.
# Copy this file to .env.prod and customize for your environment.
#
# Usage:
#   cp .env.prod.example .env.prod
#   nano .env.prod  # Edit with your production values
#
# IMPORTANT: Never commit .env.prod to git! It should be in .gitignore.

# ==============================================================================
# Django Settings
# ==============================================================================

# DEBUG: MUST be False in production!
# Setting DEBUG=True exposes sensitive information and should NEVER be used in production
DEBUG=False

# SECRET_KEY: Django's secret key for cryptographic signing
# Generate a new key with: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
# Keep this secret and never share it!
SECRET_KEY=CHANGE-THIS-TO-A-RANDOM-50-CHARACTER-STRING

# ALLOWED_HOSTS: Comma-separated list of domains that can serve this application
# For subdomain deployment: theses.example.com
# For subpath deployment: example.com
# Multiple domains: theses.example.com,thesis.example.org
ALLOWED_HOSTS=theses.example.com

# CSRF_TRUSTED_ORIGINS: Comma-separated list of trusted origins for CSRF protection
# Must include the protocol (https://) and match your deployment domain
# For subdomain: https://theses.example.com
# For subpath: https://example.com
# Multiple: https://theses.example.com,https://thesis.example.org
CSRF_TRUSTED_ORIGINS=https://theses.example.com

# ==============================================================================
# Database Settings (PostgreSQL)
# ==============================================================================

# Database name
POSTGRES_DB=thesis_manager

# Database user
POSTGRES_USER=thesis_user

# Database password
# Generate a strong password with: openssl rand -base64 32
# Use a password manager to store this securely!
POSTGRES_PASSWORD=CHANGE-THIS-TO-A-STRONG-PASSWORD-32-CHARACTERS

# ==============================================================================
# Email Configuration (Optional)
# ==============================================================================
# Configure these if you want password reset emails and notifications.
# Leave commented out to disable email features.

# Email backend (use SMTP for production)
# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend

# SMTP server settings
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_USE_SSL=False

# Email credentials
# For Gmail: Use an app-specific password, not your regular password
# https://support.google.com/accounts/answer/185833
# EMAIL_HOST_USER=your-email@gmail.com
# EMAIL_HOST_PASSWORD=your-app-specific-password

# "From" address for emails
# DEFAULT_FROM_EMAIL=thesis-manager@example.com
# SERVER_EMAIL=thesis-manager@example.com

# ==============================================================================
# Production Security Settings
# ==============================================================================
# These settings enhance security for production deployments.
# All should be set to "True" when running in production behind HTTPS/SSL.

# Reverse proxy settings (required when behind nginx/traefik)
USE_X_FORWARDED_HOST=True
USE_X_FORWARDED_PORT=True
SECURE_PROXY_SSL_HEADER=True

# HTTPS/SSL security settings
SECURE_SSL_REDIRECT=True
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True
SECURE_BROWSER_XSS_FILTER=True
SECURE_CONTENT_TYPE_NOSNIFF=True
X_FRAME_OPTIONS=SAMEORIGIN

# HSTS (HTTP Strict Transport Security)
# WARNING: Only enable AFTER verifying HTTPS works correctly!
# Once enabled, browsers will refuse to connect via HTTP for the specified time
# Start with a short time (300 = 5 minutes) and increase after testing
# SECURE_HSTS_SECONDS=31536000
# SECURE_HSTS_INCLUDE_SUBDOMAINS=True
# SECURE_HSTS_PRELOAD=True

# ==============================================================================
# Subpath Deployment (Optional)
# ==============================================================================
# Only needed if deploying under a subpath (e.g., example.com/theses/)
# For subdomain deployment (theses.example.com), leave these commented

# FORCE_SCRIPT_NAME=/theses
# STATIC_URL=/theses/static/
# MEDIA_URL=/theses/media/

# ==============================================================================
# Additional Production Settings (Optional)
# ==============================================================================

# Sentry DSN for error tracking (optional)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/your-project-id

# Redis URL for caching (optional - requires additional setup)
# REDIS_URL=redis://redis:6379/0

# ==============================================================================
# Example Configurations
# ==============================================================================

# Example 1: Subdomain deployment (theses.example.com)
# -------------------------------------------------------
# DEBUG=False
# SECRET_KEY=django-insecure-abc123xyz789...
# ALLOWED_HOSTS=theses.example.com
# CSRF_TRUSTED_ORIGINS=https://theses.example.com
# POSTGRES_DB=thesis_manager
# POSTGRES_USER=thesis_user
# POSTGRES_PASSWORD=super-secure-password-here
# USE_X_FORWARDED_HOST=True
# USE_X_FORWARDED_PORT=True
# SECURE_PROXY_SSL_HEADER=True
# SECURE_SSL_REDIRECT=True
# SESSION_COOKIE_SECURE=True
# CSRF_COOKIE_SECURE=True
# SECURE_BROWSER_XSS_FILTER=True
# SECURE_CONTENT_TYPE_NOSNIFF=True
# X_FRAME_OPTIONS=SAMEORIGIN

# Example 2: Subpath deployment (example.com/theses/)
# -----------------------------------------------------
# DEBUG=False
# SECRET_KEY=django-insecure-abc123xyz789...
# ALLOWED_HOSTS=example.com
# CSRF_TRUSTED_ORIGINS=https://example.com
# POSTGRES_DB=thesis_manager
# POSTGRES_USER=thesis_user
# POSTGRES_PASSWORD=super-secure-password-here
# USE_X_FORWARDED_HOST=True
# USE_X_FORWARDED_PORT=True
# SECURE_PROXY_SSL_HEADER=True
# SECURE_SSL_REDIRECT=True
# SESSION_COOKIE_SECURE=True
# CSRF_COOKIE_SECURE=True
# SECURE_BROWSER_XSS_FILTER=True
# SECURE_CONTENT_TYPE_NOSNIFF=True
# X_FRAME_OPTIONS=SAMEORIGIN
# FORCE_SCRIPT_NAME=/theses
# STATIC_URL=/theses/static/
# MEDIA_URL=/theses/media/

# Example 3: Multiple domains
# ----------------------------
# DEBUG=False
# SECRET_KEY=django-insecure-abc123xyz789...
# ALLOWED_HOSTS=theses.example.com,thesis.example.org
# CSRF_TRUSTED_ORIGINS=https://theses.example.com,https://thesis.example.org
# POSTGRES_DB=thesis_manager
# POSTGRES_USER=thesis_user
# POSTGRES_PASSWORD=super-secure-password-here
# USE_X_FORWARDED_HOST=True
# USE_X_FORWARDED_PORT=True
# SECURE_PROXY_SSL_HEADER=True
# SECURE_SSL_REDIRECT=True
# SESSION_COOKIE_SECURE=True
# CSRF_COOKIE_SECURE=True
# SECURE_BROWSER_XSS_FILTER=True
# SECURE_CONTENT_TYPE_NOSNIFF=True
# X_FRAME_OPTIONS=SAMEORIGIN

# ==============================================================================
# Security Checklist
# ==============================================================================
#
# Before deploying to production, ensure:
# ✓ DEBUG=False
# ✓ SECRET_KEY is random and secret
# ✓ ALLOWED_HOSTS matches your domain(s)
# ✓ CSRF_TRUSTED_ORIGINS includes https:// and matches your domain(s)
# ✓ POSTGRES_PASSWORD is strong (32+ characters)
# ✓ .env.prod is in .gitignore
# ✓ .env.prod has restrictive permissions (chmod 600 .env.prod)
# ✓ SSL/TLS certificates are installed and valid
# ✓ Firewall allows only ports 22, 80, 443
# ✓ Regular backups are configured
#
# See DEPLOYMENT.md for complete deployment guide.
